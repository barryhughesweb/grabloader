//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //
//  ***** ***** *****                                     ***** ***** *****  //
//  ***** ***** *****               MIXINS                ***** ***** *****  //
//  ***** ***** *****                                     ***** ***** *****  //
//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //

//  If you wish, you can install additional mixin libraries, such as Compass
//  or Bourbon into 'global.sass' without worrying about clashes.
//
// [_01_] FONT SIZE
// [_02_] MEDIA QUERIES
// [_03_] TRANSITIONS
// [_04_] SVG BACKGROUND IMAGE
// [_05_] CLEARFIX
// [_06_] PLACEHOLDER
// [_07_] UNSELECTABLE
// [_08_] CENTER
// [_09_] DISPLAY INLINE BLOCK
// [_10_] DISPLAY FLEX
// [_11_] MATERIAL DESIGN CARD

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_01_] FONT SIZE  //

//  Set the font-size in rems with a pixel fallback. Both values are optional
//  and will default to project config settings if left blank. Values must be
//  stated without the unit.
//
//  EXAMPLE: +font-size(1.6, 1.5)

=font-size($size: $font_base, $line: $size * $line_height)
  font-size:   ($size * 10) + px
  line-height: ($line * 10) + px
  font-size:   $size + rem
  line-height: $line + rem

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_02_] MEDIA QUERIES  //

//  Write media queries inline using one the four breakpoints specified in the
//  config file. Alternatively write your own media query rule.
//
//  EXAMPLE: +mobile

=from($device)
  @media screen and (min-width: $device)
    @content

=until($device)
  @media screen and (max-width: $device - 1px)
    @content

=mobile
  @media screen and (max-width: $tablet - 1px)
    @content

=tablet
  @media screen and (min-width: $tablet)
    @content

=touch
  @media screen and (max-width: $desktop - 1px)
    @content

=desktop
  @media screen and (min-width: $desktop)
    @content

=mac
  @media screen and (min-width: $mac)
    @content


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_03_] TRANSITIONS

//  Add one or more CSS transitions to an element (not requred if you are using
//  autoprefixer on compile.
//
//  EXAMPLE: +transition(color 0.3s ease, background 0.4s ease)

=transition($args)
  -webkit-transition: $args
  -o-transition: $args
  transition: $args

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_04_] SVG BACKGROUND IMAGE

//  Add a PNG fallback to SVG background images. Both images must be in the same
//  directory and have the same name. Don't include the image extension.
//
//  EXAMPLE: +svg(logo, 0, 50%)

=svg($name)
  background-image: url('#{$dir-img}#{$name}.png')
  background-image: url('#{$dir-img}#{$name}.svg')

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //

// [_05_] CLEARFIX

//  EXAMPLE: +clearfix

=clearfix
  *zoom: 1
  &:before,
  &:after
    content: ""
    display: table
  &:after
    clear: both

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_06_] PLACEHOLDER

//  EXAMPLE: +cf

=placeholder
  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input'
  @each $placeholder in $placeholders
    &:#{$placeholder}-placeholder
      @content

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_07_] UNSELECTABLE

//  EXAMPLE: +unselectable

=unselectable
  -webkit-touch-callout: none
  -webkit-user-select: none
  -moz-user-select: none
  -ms-user-select: none
  user-select: none

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_08_] CENTER

//  EXAMPLE: +center

=center
  position: relative
  top: 50%
  -webkit-transform: translateY(-50%)
  -ms-transform: translateY(-50%)
  transform: translateY(-50%)

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_09_] DISPLAY INLINE BLOCK

//  EXAMPLE: +inline-block

=inline-block
  display: inline-block
  zoom: 1
  *display: inline

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_10_] DISPLAY FLEX

//  EXAMPLE: +flex

=flex
  -js-display: flex
  display: -webkit-box
  display: -moz-box
  display: -ms-flexbox
  display: -webkit-flex
  display: flex

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_11_] MATERIAL DESIGN CARD

//  EXAMPLE: +card

=card($depth)
  @if $depth < 1
    box-shadow: none
  @else if $depth > 5
    @warn "Invalid $depth `#{$depth}` for mixin `card`."
  @else
    box-shadow: bottom-shadow($depth), top-shadow($depth)

@function top-shadow($depth)
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px
  $blur: nth(1.5 3 10 14 19, $depth) * 4px
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth))

  @return 0 $primary-offset $blur $color

@function bottom-shadow($depth)
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px
  $blur: nth(1 3 3 5 6, $depth) * 4px
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth))

  @return 0 $primary-offset $blur $color

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_12_] POSITIONING

//  EXAMPLE: +absolute(top 0 right 0)

=pos($position, $args)
  position: $position
  $offsets: top right bottom left
  @each $o in $offsets
    $i: index($args, $o)
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number
      #{$o}: nth($args, $i + 1)

=absolute($args)
  +pos(absolute, $args)

=fixed($args)
  +pos(fixed, $args)

=relative($args)
  +pos(relative, $args)